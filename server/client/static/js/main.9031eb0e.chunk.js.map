{"version":3,"sources":["reportWebVitals.js","app/services/localStorage.service.js","app/services/auth.service.js","app/services/http.service.js","app/services/user.service.js","app/utils/history.js","app/utils/generateAuthError.js","app/store/users.js","app/services/category.service.js","app/store/categories.js","app/components/ui/category.jsx","app/components/ui/productCard.jsx","app/services/product.service.js","app/store/products.js","app/components/page/productPage/index.js","app/components/page/productPage/productPage.jsx","app/utils/paginate.js","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/utils/formatPrice.js","app/components/ui/productList.jsx","app/components/page/productsListPage/index.js","app/components/page/productsListPage/productsListPage.jsx","app/components/ui/hoc/productsLoader.jsx","app/layouts/products.jsx","app/utils/validator.js","app/components/common/form/textField.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/layouts/main.jsx","app/components/ui/navProfile.jsx","app/components/ui/navBar.jsx","app/components/common/protectedRoute.jsx","app/layouts/logOut.jsx","app/components/ui/hoc/appLoader.jsx","app/components/common/form/selectField.jsx","app/components/ui/addForm.jsx","app/components/ui/addProductTable.jsx","app/layouts/add.jsx","app/layouts/cart.jsx","app/App.js","app/store/createStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","localStorageService","setTokens","refreshToken","accessToken","userId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","httpAuth","axios","create","baseURL","config","apiEndpoint","params","key","process","REACT_APP_FIREBASE_KEY","authService","register","payload","a","console","log","post","data","login","email","password","returnSecureToken","refresh","grant_type","refresh_token","http","configFile","interceptors","request","use","isExpired","now","isFireBase","containSlash","test","url","slice","idToken","id_token","expires_in","localId","user_id","auth","headers","Authorization","error","Promise","reject","response","res","content","_id","Object","keys","map","status","toast","httpService","get","put","delete","patch","userEndpoint","userService","getCurrentUser","update","history","createBrowserHistory","generateAuthError","message","initialState","entities","isLoading","isLoggedIn","dataLoaded","usersSlice","createSlice","name","reducers","usersRequested","state","usersReceived","action","usersRequestFailed","authRequestSuccess","authRequestFailed","userCreated","push","userUpdated","index","findIndex","user","userLoggedOut","authRequested","usersReducer","reducer","actions","createAction","userUpdateRequested","updateUserFailed","updateUser","dispatch","categoriesService","req","categoriesSlice","lastFetch","categoriesRequested","categoriesReceived","categoriesRequestFailed","categoriesReducer","Category","id","useSelector","categories","category","find","p","getCategoryById","className","style","backgroundColor","color","whiteSpace","ProductCard","product","useDispatch","currentUser","users","u","cart","inCart","includes","height","src","photo","maxHeight","objectFit","alt","description","to","onClick","productEndpoint","productService","getCurrentProduct","getProductId","remove","productId","productsSlice","productsRequested","productsReceived","productsRequestFailed","productCreated","productUpdated","productLoggedOut","productRemoved","filter","c","productsReducer","productCreateRequested","createProductFailed","productUpdateRequested","updateProductFailed","productRemoveRequested","loadProductsList","getState","ProductPage","products","getProductById","paginate","items","pageNumber","pageSize","startIndex","_","take","value","Pagination","itemsCount","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","page","GroupList","valueProperty","contentProperty","onItemSelect","selectedItem","item","role","defaultProps","formatPrice","str","wNumb","thousand","suffix","ProductList","width","price","ProductsListPage","categoriesLoading","useState","setCurrentPage","searchQuery","setSearchQuery","selectedProf","setSelectedProf","path","order","sortBy","setSortBy","useEffect","sort","filteredProducts","toLowerCase","indexOf","JSON","stringify","count","length","productsCrop","orderBy","type","placeholder","onChange","target","undefined","maxWidth","marginRight","pageIndex","ProductsLoader","children","dataStatus","propTypes","PropTypes","oneOfType","arrayOf","node","Products","useParams","validator","errors","validate","validateMethod","statusValidate","trim","fieldName","TextField","label","showPassword","setShowPassword","htmlFor","prevState","CheckBoxField","checked","LoginForm","useHistory","stayOn","setData","loginError","setErrors","handleChange","validatorConfig","isRequired","isValid","onSubmit","e","preventDefault","redirect","location","from","pathname","code","errorMessage","disabled","RegisterForm","licence","isEmail","min","isCapitalSymbol","isContainDigit","newData","Login","formType","setFormType","toggleFormType","Main","NavProfile","isOpen","setOpen","NavBar","activeClassName","exact","ProtectedRoute","Component","component","rest","render","props","LogOut","AppLoader","usersStatusLoading","date","categoryService","SelectField","defaultOption","options","optionsArray","Array","isArray","optionName","option","AddForm","edit","onCancel","quantity","categoriesList","isUrl","nanoid","createProduct","AddProductTable","setProduct","editMode","setEditMode","handleDelete","renderContent","column","columns","overflow","display","WebkitLineClamp","WebkitBoxOrient","prod","filteredUsers","usersCrop","scope","Add","Cart","cartProducts","total","reduce","acc","marginLeft","App","require","combineReducers","configureStore","rootReducer","store","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9031eb0e.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(\r\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n                getCLS(onPerfEntry);\r\n                getFID(onPerfEntry);\r\n                getFCP(onPerfEntry);\r\n                getLCP(onPerfEntry);\r\n                getTTFB(onPerfEntry);\r\n            }\r\n        );\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const TOKEN_KEY = \"jwt-token\";\r\nconst REFRESH_KEY = \"jwt-refresh-token\";\r\nconst EXPIRES_KEY = \"jwt-expires\";\r\nconst USERID_KEY = \"user-local-id\";\r\n\r\nexport function setTokens({\r\n    refreshToken,\r\n    accessToken,\r\n    userId,\r\n    expiresIn = 3600\r\n}) {\r\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\r\n    localStorage.setItem(USERID_KEY, userId);\r\n    localStorage.setItem(TOKEN_KEY, accessToken);\r\n    localStorage.setItem(REFRESH_KEY, refreshToken);\r\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\r\n}\r\nexport function getAccessToken() {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n}\r\nexport function getRefreshToken() {\r\n    return localStorage.getItem(REFRESH_KEY);\r\n}\r\nexport function removeAuthData() {\r\n    localStorage.removeItem(USERID_KEY);\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    localStorage.removeItem(REFRESH_KEY);\r\n    localStorage.removeItem(EXPIRES_KEY);\r\n}\r\n\r\nexport function getTokenExpiresDate() {\r\n    return localStorage.getItem(EXPIRES_KEY);\r\n}\r\nexport function getUserId() {\r\n    return localStorage.getItem(USERID_KEY);\r\n}\r\nconst localStorageService = {\r\n    setTokens,\r\n    getAccessToken,\r\n    getRefreshToken,\r\n    getTokenExpiresDate,\r\n    getUserId,\r\n    removeAuthData\r\n};\r\nexport default localStorageService;\r\n","import axios from \"axios\";\r\nimport localStorageService from \"./localStorage.service\";\r\nimport config from \"../config.json\";\r\n\r\nconst httpAuth = axios.create({\r\n  baseURL: config.apiEndpoint + \"/auth\",\r\n  params: {\r\n    key: process.env.REACT_APP_FIREBASE_KEY\r\n  }\r\n});\r\n\r\nconst authService = {\r\n  register: async (payload) => {\r\n    console.log(payload);\r\n    const { data } = await httpAuth.post(`signUp`, payload);\r\n    return data;\r\n  },\r\n  login: async ({ email, password }) => {\r\n    const { data } = await httpAuth.post(`signInWithPassword`,\r\n      {\r\n        email,\r\n        password,\r\n        returnSecureToken: true\r\n      });\r\n    return data;\r\n  },\r\n  refresh: async () => {\r\n    const { data } = await httpAuth.post(\"token\", {\r\n      grant_type: \"refresh_token\",\r\n      refresh_token: localStorageService.getRefreshToken()\r\n    });\r\n    return data;\r\n  }\r\n};\r\nexport default authService;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport configFile from \"../config.json\";\r\nimport localStorageService from \"./localStorage.service\";\r\nimport authService from \"./auth.service\";\r\n\r\nconst http = axios.create({\r\n  baseURL: configFile.apiEndpoint\r\n});\r\n\r\nhttp.interceptors.request.use(\r\n    async function (config) {\r\n      const expiresDate = localStorageService.getTokenExpiresDate();\r\n      const refreshToken = localStorageService.getRefreshToken();\r\n      const isExpired = refreshToken && expiresDate < Date.now();\r\n\r\n      if (configFile.isFireBase) {\r\n        const containSlash = /\\/$/gi.test(config.url);\r\n        config.url =\r\n            (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\r\n        if (isExpired) {\r\n          const data = await authService.refresh();\r\n\r\n          localStorageService.setTokens({\r\n            refreshToken: data.refresh_token,\r\n            idToken: data.id_token,\r\n            expiresIn: data.expires_in,\r\n            localId: data.user_id\r\n          });\r\n        }\r\n        const accessToken = localStorageService.getAccessToken();\r\n        if (accessToken) {\r\n          config.params = {\r\n            ...config.params,\r\n            auth: accessToken\r\n          };\r\n        }\r\n      } else {\r\n        if (isExpired) {\r\n          const data = await authService.refresh();\r\n          localStorageService.setTokens(data);\r\n        }\r\n        const accessToken = localStorageService.getAccessToken();\r\n        if (accessToken) {\r\n          config.headers = {\r\n            ...config.headers,\r\n            Authorization: `Bearer ${accessToken}`\r\n          };\r\n        }\r\n      }\r\n      return config;\r\n    },\r\n    function (error) {\r\n      return Promise.reject(error);\r\n    }\r\n);\r\n\r\nfunction transormData(data) {\r\n  return data && !data._id\r\n      ? Object.keys(data).map((key) => ({\r\n        ...data[key]\r\n      }))\r\n      : data;\r\n}\r\n\r\nhttp.interceptors.response.use(\r\n    (res) => {\r\n      if (configFile.isFireBase) {\r\n        res.data = { content: transormData(res.data) };\r\n      }\r\n      res.data = { content: res.data };\r\n      return res;\r\n    },\r\n    function (error) {\r\n      const expectedErrors =\r\n          error.response &&\r\n          error.response.status >= 400 &&\r\n          error.response.status < 500;\r\n\r\n      if (!expectedErrors) {\r\n        console.log(error);\r\n        toast.error(\"Somthing was wrong. Try it later\");\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n);\r\nconst httpService = {\r\n  get: http.get,\r\n  post: http.post,\r\n  put: http.put,\r\n  delete: http.delete,\r\n  patch: http.patch\r\n};\r\nexport default httpService;\r\n","import httpService from \"./http.service\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst userEndpoint = \"user/\";\r\n\r\nconst userService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(userEndpoint);\r\n        return data;\r\n    },\r\n    create: async (payload) => {\r\n        const { data } = await httpService.put(\r\n            userEndpoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    },\r\n    getCurrentUser: async () => {\r\n        const { data } = await httpService.get(\r\n            userEndpoint + localStorageService.getUserId()\r\n        );\r\n        return data;\r\n    },\r\n    update: async (payload) => {\r\n        const { data } = await httpService.patch(\r\n            userEndpoint + localStorageService.getUserId(),\r\n            payload\r\n        );\r\n        return data;\r\n    }\r\n};\r\nexport default userService;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\nexport default history;\r\n","export function generateAuthError(message) {\r\n  switch (message) {\r\n    case \"INVALID_PASSWORD\":\r\n      return \"Email или пароль введены некорректно\";\r\n    case \"EMAIL_EXISTS\":\r\n      return \"Пользователь с таким Email уже существует\";\r\n    default:\r\n      return \"Слишком много попыток входа. Попробуйте позднее\";\r\n  }\r\n}\r\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\r\nimport userService from \"../services/user.service\";\r\nimport authService from \"../services/auth.service\";\r\nimport localStorageService from \"../services/localStorage.service\";\r\nimport history from \"../utils/history\";\r\nimport { generateAuthError } from \"../utils/generateAuthError\";\r\n\r\nconst initialState = localStorageService.getAccessToken() ? {\r\n  entities: null,\r\n  isLoading: true,\r\n  error: null,\r\n  auth: { userId: localStorageService.getUserId() },\r\n  isLoggedIn: true,\r\n  dataLoaded: false\r\n} : {\r\n  entities: null,\r\n  isLoading: false,\r\n  error: null,\r\n  auth: null,\r\n  isLoggedIn: false,\r\n  dataLoaded: false\r\n};\r\nconst usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    usersRequested: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    usersReceived: (state, action) => {\r\n      state.entities = action.payload;\r\n      state.dataLoaded = true;\r\n      state.isLoading = false;\r\n    },\r\n    usersRequestFailed: (state, action) => {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    authRequestSuccess: (state, action) => {\r\n      state.auth = action.payload;\r\n      state.isLoggedIn = true;\r\n    },\r\n    authRequestFailed: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    userCreated: (state, action) => {\r\n      state.entities.push(action.payload);\r\n    },\r\n    userUpdated: (state, action) => {\r\n      const index = state.entities.findIndex(user => action.payload._id === user._id);\r\n      state.entities[index] = action.payload;\r\n    },\r\n    userLoggedOut: (state) => {\r\n      state.entities = null;\r\n      state.isLoggedIn = false;\r\n      state.auth = null;\r\n      state.dataLoaded = false;\r\n    },\r\n    authRequested: (state) => {\r\n      state.error = null;\r\n    }\r\n  }\r\n});\r\n\r\nconst {\r\n  reducer: usersReducer,\r\n  actions\r\n} = usersSlice;\r\nconst {\r\n  usersRequested,\r\n  usersReceived,\r\n  usersRequestFailed,\r\n  authRequestSuccess,\r\n  authRequestFailed,\r\n  userUpdated,\r\n  userLoggedOut\r\n} = actions;\r\n\r\nconst authRequested = createAction(\"user/authRequested\");\r\nconst userUpdateRequested = createAction(\"user/userUpdateRequested\");\r\nconst updateUserFailed = createAction(\"user/updateUserFailed\");\r\n\r\nexport const signUp = (payload) => async (dispatch) => {\r\n  dispatch(authRequested());\r\n  try {\r\n    const data = await authService.register(payload);\r\n    localStorageService.setTokens(data);\r\n    dispatch(authRequestSuccess({ userId: data.userId }));\r\n    history.push(\"/product\");\r\n  } catch (error) {\r\n    dispatch(authRequestFailed(error.message));\r\n  }\r\n};\r\n\r\nexport const login = ({ payload, redirect }) => async (dispatch) => {\r\n  const { email, password } = payload;\r\n  dispatch(authRequested());\r\n  try {\r\n    const data = await authService.login({\r\n      email,\r\n      password\r\n    });\r\n    localStorageService.setTokens(data);\r\n    dispatch(authRequestSuccess({ userId: data.localId }));\r\n    localStorageService.setTokens(data);\r\n    history.push(redirect);\r\n  } catch (error) {\r\n    const { code, message } = error.response.data.error;\r\n    if (code === 400) {\r\n      const errorMessage = generateAuthError(message);\r\n      dispatch(authRequestFailed(errorMessage));\r\n    } else {\r\n      dispatch(authRequestFailed(error.message));\r\n    }\r\n  }\r\n};\r\n\r\nexport const logOut = () => (dispatch) => {\r\n  localStorageService.removeAuthData();\r\n  dispatch(userLoggedOut());\r\n  history.push(\"/\");\r\n};\r\n\r\nexport const updateUser = (payload) => async (dispatch) => {\r\n  dispatch(userUpdateRequested());\r\n  try {\r\n    const { content } = await userService.update(payload);\r\n    dispatch(userUpdated(content));\r\n  } catch (error) {\r\n    dispatch(updateUserFailed(error.message));\r\n  }\r\n};\r\n\r\nexport const addProductToCart = (payload) => async (dispatch) => {\r\n  dispatch(userUpdateRequested());\r\n  try {\r\n    const { content } = await userService.update(payload);\r\n    dispatch(userUpdated(content));\r\n  } catch (error) {\r\n    dispatch(updateUserFailed(error.message));\r\n  }\r\n};\r\n\r\nexport const loadUsersList = () => async (dispatch, getState) => {\r\n  dispatch(usersRequested());\r\n  try {\r\n    const { content } = await userService.get();\r\n    console.log(content);\r\n    dispatch(usersReceived(content));\r\n  } catch (error) {\r\n    dispatch(usersRequestFailed(error.message));\r\n  }\r\n};\r\n\r\nexport const getUsers = () => (state) => state.users.entities;\r\nexport const getCurrentUserData = () => (state) => {\r\n  return state.users.entities ? state.users.entities.find((u) => u._id === state.users.auth.userId) : null;\r\n};\r\nexport const getCurrentUserCart = () => (state) => {\r\n  return state.users.entities ? state.users.entities.find((u) => u._id === state.users.auth.userId).cart : null;\r\n};\r\nexport const getUserById = (userId) => (state) => {\r\n  if (state.users.entities) {\r\n    return state.users.entities.find(u => u._id === userId);\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const getIsLoggedIn = () => state => state.users.isLoggedIn;\r\n// export const getDataStatus = () => state => state.products.dataLoaded;\r\nexport const getUsersLoadingStatus = () => state => state.users.isLoading;\r\nexport const getCurrentUserId = () => state => state.users.auth.userId;\r\nexport const getAuthErrors = () => state => state.users.error;\r\n\r\nexport default usersReducer;\r\n","import httpService from \"./http.service\";\r\n\r\nconst categoriesEndpoint = \"categories/\";\r\n\r\nconst categoriesService = {\r\n    get: async () => {\r\n        const req = await httpService.get(categoriesEndpoint);\r\n        return req.data;\r\n    }\r\n};\r\nexport default categoriesService;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport categoryService from \"../services/category.service\";\r\n\r\nconst categoriesSlice = createSlice({\r\n    name: \"categories\",\r\n    initialState: {\r\n        entities: null,\r\n        isLoading: true,\r\n        error: null,\r\n        lastFetch: null\r\n    },\r\n    reducers: {\r\n        categoriesRequested: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        categoriesReceived: (state, action) => {\r\n            state.entities = action.payload;\r\n            state.lastFetch = Date.now();\r\n            state.isLoading = false;\r\n        },\r\n        categoriesRequestFailed: (state, action) => {\r\n            state.error = action.payload;\r\n            state.isLoading = false;\r\n        }\r\n    }\r\n});\r\n\r\nconst { reducer: categoriesReducer, actions } = categoriesSlice;\r\nconst { categoriesRequested, categoriesReceived, categoriesRequestFailed } = actions;\r\n\r\nconst isOutdated = date => Date.now() - date > 10 * 60 * 1000;\r\n\r\nexport const loadCategoriesList = () => async (dispatch, getState) => {\r\n    const { lastFetch } = getState().categories;\r\n    if (isOutdated(lastFetch)) {\r\n        dispatch(categoriesRequested());\r\n        try {\r\n            const { content } = await categoryService.get();\r\n            dispatch(categoriesReceived(content));\r\n        } catch (error) {\r\n            dispatch(categoriesRequestFailed(error.message));\r\n        }\r\n    }\r\n};\r\n\r\nexport const getCategories = () => (state) => state.categories.entities;\r\nexport const getCategoriesLoadingStatus = () => (state) =>\r\n    state.categories.isLoading;\r\nexport const getCategoryById = (id) => (state) => {\r\n    if (state.categories.entities) {\r\n        return state.categories.entities.find(p => p._id === id);\r\n    }\r\n    return [];\r\n};\r\n\r\nexport default categoriesReducer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCategoriesLoadingStatus, getCategoryById } from \"../../store/categories\";\r\n\r\nconst Category = ({ id }) => {\r\n  const isLoading = useSelector(getCategoriesLoadingStatus());\r\n  const category = useSelector(getCategoryById(id));\r\n  if (isLoading || !category) {\r\n    return \"loading ...\";\r\n  }\r\n  return <span className=\"badge\" style={{\r\n    backgroundColor: `var(--bs-${category.color})`,\r\n    whiteSpace: \"normal\"\r\n  }}>{category.name}</span>;\r\n};\r\nCategory.propTypes = {\r\n  id: PropTypes.string\r\n};\r\nexport default Category;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCurrentUserData, updateUser } from \"../../store/users\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Category from \"./category\";\r\n\r\nconst ProductCard = ({ product }) => {\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector(getCurrentUserData());\r\n  const cart = currentUser.cart;\r\n  const inCart = cart.includes(product._id);\r\n  const addToCart = (id) => {\r\n    dispatch(updateUser({\r\n      ...currentUser,\r\n      cart: [...cart, id]\r\n    }));\r\n  };\r\n  return (\r\n      <div className=\"card mb-3\">\r\n        <div style={{ height: \"400px\" }} className=\"p-5\">\r\n          <img src={product.photo} className=\"card-img-top img-fluid\" style={{ maxHeight: \"100%\", objectFit: \"contain\" }} alt=\"photo\"/>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <Category id={product.category}/>\r\n          <h5 className=\"card-title fs-1\">{product.name}</h5>\r\n          <p className=\"card-text fs-3\">{product.description}</p>\r\n          {!inCart\r\n              ? <button onClick={() => addToCart(product._id)} className=\"btn btn-success btn-lg mx-2\">\r\n                <i className=\"bi bi-cart-plus\"/>\r\n                {\" в корзину\"}\r\n              </button>\r\n              : <Link to=\"/cart\" className=\"btn btn-outline-success btn-lg mx-2\">\r\n                <i className=\"bi bi-cart-check\"/>\r\n                {\" в корзине\"}\r\n              </Link>}\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\nProductCard.propTypes = {\r\n  product: PropTypes.object\r\n};\r\n\r\nexport default ProductCard;\r\n","import httpService from \"./http.service\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst productEndpoint = \"product/\";\r\n\r\nconst productService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(productEndpoint);\r\n    return data;\r\n  },\r\n  create: async (payload) => {\r\n    const { data } = await httpService.put(\r\n        productEndpoint + payload._id,\r\n        payload\r\n    );\r\n    return data;\r\n  },\r\n  getCurrentProduct: async () => {\r\n    const { data } = await httpService.get(\r\n        productEndpoint + localStorageService.getProductId()\r\n    );\r\n    return data;\r\n  },\r\n  update: async (payload) => {\r\n    const { data } = await httpService.patch(\r\n        productEndpoint + payload._id,\r\n        payload\r\n    );\r\n    return data;\r\n  },\r\n  remove: async (productId) => {\r\n    const { data } = await httpService.delete(productEndpoint + productId);\r\n    return data;\r\n  }\r\n};\r\nexport default productService;\r\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\r\n// import userService from \"../services/user.service\";\r\nimport localStorageService from \"../services/localStorage.service\";\r\n// import history from \"../utils/history\";\r\n// import { generateAuthError } from \"../utils/generateAuthError\";\r\nimport productService from \"../services/product.service\";\r\n\r\nconst initialState = localStorageService.getAccessToken() ? {\r\n  entities: null,\r\n  isLoading: true,\r\n  error: null,\r\n  // auth: { productId: localStorageService.getProductId() },\r\n  isLoggedIn: true,\r\n  dataLoaded: false\r\n} : {\r\n  entities: null,\r\n  isLoading: false,\r\n  error: null,\r\n  // auth: null,\r\n  isLoggedIn: false,\r\n  dataLoaded: false\r\n};\r\nconst productsSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {\r\n    productsRequested: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    productsReceived: (state, action) => {\r\n      state.entities = action.payload;\r\n      state.dataLoaded = true;\r\n      state.isLoading = false;\r\n    },\r\n    productsRequestFailed: (state, action) => {\r\n      state.error = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    authRequestSuccess: (state, action) => {\r\n      // state.auth = action.payload;\r\n      state.isLoggedIn = true;\r\n    },\r\n    authRequestFailed: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    productCreated: (state, action) => {\r\n      state.entities.push(action.payload);\r\n    },\r\n    productUpdated: (state, action) => {\r\n      const index = state.entities.findIndex(product => action.payload._id === product._id);\r\n      state.entities[index] = action.payload;\r\n    },\r\n    productLoggedOut: (state) => {\r\n      state.entities = null;\r\n      state.isLoggedIn = false;\r\n      // state.auth = null;\r\n      state.dataLoaded = false;\r\n    },\r\n    authRequested: (state) => {\r\n      state.error = null;\r\n    },\r\n    productRemoved: (state, action) => {\r\n      state.entities = state.entities.filter((c) => c._id !== action.payload);\r\n    }\r\n  }\r\n});\r\n\r\nconst {\r\n  reducer: productsReducer,\r\n  actions\r\n} = productsSlice;\r\nconst {\r\n  productsRequested,\r\n  productsReceived,\r\n  productsRequestFailed,\r\n  productCreated,\r\n  productUpdated,\r\n  productRemoved\r\n  // productLoggedOut\r\n} = actions;\r\n\r\nconst productCreateRequested = createAction(\"product/productCreateRequested\");\r\nconst createProductFailed = createAction(\"product/createProductFailed\");\r\nconst productUpdateRequested = createAction(\"product/productUpdateRequested\");\r\nconst updateProductFailed = createAction(\"product/updateProductFailed\");\r\nconst productRemoveRequested = createAction(\"user/commentRemoveRequested\");\r\n\r\nexport const createProduct = (payload) => async (dispatch) => {\r\n  dispatch(productCreateRequested());\r\n  try {\r\n    const { content } = await productService.create(payload);\r\n    dispatch(productCreated(content));\r\n    // history.push(\"products/\");\r\n  } catch (error) {\r\n    dispatch(createProductFailed(error.message));\r\n  }\r\n};\r\n\r\n// export const newProduct = (payload) => async (dispatch) => {\r\n//   dispatch(authRequested());\r\n//   try {\r\n//     // const data = await productService.create(payload);\r\n//     // const data = await authService.register({\r\n//     //   email,\r\n//     //   password\r\n//     // });\r\n//     localStorageService.setTokens(data);\r\n//     dispatch(authRequestSuccess({ productId: data.localId }));\r\n//     dispatch(createProduct(payload));\r\n//   } catch (error) {\r\n//     dispatch(authRequestFailed(error.message));\r\n//   }\r\n// };\r\n\r\n// export const login = ({ payload, redirect }) => async (dispatch) => {\r\n//   const { email, password } = payload;\r\n//   dispatch(authRequested());\r\n//   try {\r\n//     const data = await authService.login({\r\n//       email,\r\n//       password\r\n//     });\r\n//     localStorageService.setTokens(data);\r\n//     dispatch(authRequestSuccess({ productId: data.localId }));\r\n//     localStorageService.setTokens(data);\r\n//     history.push(redirect);\r\n//   } catch (error) {\r\n//     const { code, message } = error.response.data.error;\r\n//     if (code === 400) {\r\n//       const errorMessage = generateAuthError(message);\r\n//       dispatch(authRequestFailed(errorMessage));\r\n//     } else {\r\n//       dispatch(authRequestFailed(error.message));\r\n//     }\r\n//   }\r\n// };\r\n\r\n// export const logOut = () => (dispatch) => {\r\n//   localStorageService.removeAuthData();\r\n//   dispatch(productLoggedOut());\r\n//   history.push(\"/\");\r\n// };\r\n\r\nexport const updateProduct = (payload) => async (dispatch) => {\r\n  dispatch(productUpdateRequested());\r\n  try {\r\n    const { content } = await productService.update(payload);\r\n    dispatch(productUpdated(content));\r\n    // history.push(`/products/${content._id}`);\r\n  } catch (error) {\r\n    dispatch(updateProductFailed(error.message));\r\n  }\r\n};\r\n\r\nexport const removeProduct = (id) => async (dispatch) => {\r\n  dispatch(productRemoveRequested());\r\n  try {\r\n    await productService.remove(id);\r\n    dispatch(productRemoved(id));\r\n  } catch (error) {\r\n    dispatch(productsRequestFailed(error.message));\r\n  }\r\n};\r\n\r\nexport const loadProductsList = () => async (dispatch, getState) => {\r\n  dispatch(productsRequested());\r\n  try {\r\n    const { content } = await productService.get();\r\n    dispatch(productsReceived(content));\r\n  } catch (error) {\r\n    dispatch(productsRequestFailed(error.message));\r\n  }\r\n};\r\n\r\nexport const getProducts = () => (state) => state.products.entities;\r\nexport const getCurrentProductData = () => (state) => {\r\n  return state.products.entities ? state.products.entities.find((u) => u._id === state.products.auth.productId) : null;\r\n};\r\nexport const getProductById = (productId) => (state) => {\r\n  if (state.products.entities) {\r\n    return state.products.entities.find(u => u._id === productId);\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const getIsLoggedIn = () => state => state.products.isLoggedIn;\r\nexport const getDataStatus = () => state => state.products.dataLoaded;\r\nexport const getProductsLoadingStatus = () => state => state.products.isLoading;\r\nexport const getCurrentProductId = () => state => state.products.auth.productId;\r\nexport const getAuthErrors = () => state => state.products.error;\r\n\r\nexport default productsReducer;\r\n","import ProductPage from \"./productPage\";\r\nexport default ProductPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ProductCard from \"../../ui/productCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getProductById } from \"../../../store/products\";\r\n\r\nconst ProductPage = ({ productId }) => {\r\n  const product = useSelector(getProductById(productId));\r\n\r\n  if (product) {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n          <ProductCard product={product}/>\r\n          <div className=\"row gutters-sm\">\r\n            <div className=\"col-md-4 mb-3\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  } else {\r\n    return <h1>Loading</h1>;\r\n  }\r\n};\r\n\r\nProductPage.propTypes = {\r\n  productId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ProductPage;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    if (pagesCount === 1) return null;\r\n    const pages = _.range(1, pagesCount + 1);\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pages.map((page) => (\r\n                    <li\r\n                        className={\r\n                            \"page-item \" +\r\n                            (page === currentPage ? \"active\" : \"\")\r\n                        }\r\n                        key={\"page_\" + page}\r\n                    >\r\n                        <button\r\n                            className=\"page-link\"\r\n                            onClick={() => {\r\n                                onPageChange(page);\r\n                            }}\r\n                        >\r\n                            {page}\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GroupList = ({\r\n    items,\r\n    valueProperty,\r\n    contentProperty,\r\n    onItemSelect,\r\n    selectedItem\r\n}) => {\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {items.map((item) => (\r\n                <li\r\n                    key={item[valueProperty]}\r\n                    className={\r\n                        \"list-group-item\" +\r\n                        (item._id === selectedItem ? \" active\" : \"\")\r\n                    }\r\n                    onClick={() => onItemSelect(item._id)}\r\n                    role=\"button\"\r\n                >\r\n                    {item[contentProperty]}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\nGroupList.defaultProps = {\r\n    valueProperty: \"_id\",\r\n    contentProperty: \"name\"\r\n};\r\nGroupList.propTypes = {\r\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    valueProperty: PropTypes.string.isRequired,\r\n    contentProperty: PropTypes.string.isRequired,\r\n    onItemSelect: PropTypes.func,\r\n    selectedItem: PropTypes.string\r\n};\r\n\r\nexport default GroupList;\r\n","import wNumb from \"wnumb\";\r\n\r\nexport function formatPrice(str) {\r\n  const Format = wNumb({\r\n    thousand: \" \",\r\n    suffix: \" ₽\"\r\n  });\r\n  return Format.to(str);\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCurrentUserData, updateUser } from \"../../store/users\";\r\nimport { formatPrice } from \"../../utils/formatPrice\";\r\n\r\nconst ProductList = ({ products }) => {\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector(getCurrentUserData());\r\n  const cart = currentUser.cart;\r\n  const addToCart = (id) => {\r\n    dispatch(updateUser({\r\n      ...currentUser,\r\n      cart: [...cart, id]\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {products.map((item) => {\r\n        const inCart = cart.includes(item._id);\r\n        return (\r\n          <div key={item._id} className=\"card mb-3\">\r\n            <div className=\"row g-0\">\r\n              <div className=\"col-md-4 d-flex align-items-center justify-content-center\">\r\n                <img src={item.photo} className=\"img-fluid rounded-start\" alt=\"img\" width=\"140\" height=\"140\"/>\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{item.name}</h5>\r\n                  <p className=\"card-text\">{item.description}</p>\r\n                  <p className=\"card-text\">Стоимость: {formatPrice(+item.price)}\r\n                  </p>\r\n                  <Link className=\"btn btn-primary\" to={`/product/${item._id}`}>Подробнее</Link>\r\n                  {!inCart\r\n                      ? <button onClick={() => addToCart(item._id)} className=\"btn btn-success mx-2\">\r\n                        <i className=\"bi bi-cart-plus\"/>\r\n                        {\" в корзину\"}\r\n                      </button>\r\n                      : <Link to=\"/cart\" className=\"btn btn-outline-success mx-2\">\r\n                        <i className=\"bi bi-cart-check\"/>\r\n                        {\" в корзине\"}\r\n                      </Link>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>);\r\n        }\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProductList.propTypes = {\r\n  products: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ProductList;\r\n","import ProductsListPage from \"./productsListPage\";\r\nexport default ProductsListPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { paginate } from \"../../../utils/paginate\";\r\nimport Pagination from \"../../common/pagination\";\r\nimport GroupList from \"../../common/groupList\";\r\nimport ProductList from \"../../ui/productList\";\r\nimport _ from \"lodash\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getProducts } from \"../../../store/products\";\r\nimport { getCategories, getCategoriesLoadingStatus } from \"../../../store/categories\";\r\n\r\nconst ProductsListPage = () => {\r\n  const products = useSelector(getProducts());\r\n  const categories = useSelector(getCategories());\r\n  const categoriesLoading = useSelector(getCategoriesLoadingStatus());\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selectedProf, setSelectedProf] = useState();\r\n  const [sortBy, setSortBy] = useState({\r\n    path: \"name\",\r\n    order: \"asc\"\r\n  });\r\n  const pageSize = 8;\r\n\r\n  const renderSortArrow = (sort) => {\r\n    if (sort.order === \"asc\") {\r\n      return <i className=\"bi bi-caret-down-fill mx-2\"/>;\r\n    } else {\r\n      return <i className=\"bi bi-caret-up-fill mx2\"/>;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedProf, searchQuery]);\r\n\r\n  const handleProfessionSelect = (item) => {\r\n    if (searchQuery !== \"\") setSearchQuery(\"\");\r\n    console.log(item);\r\n    setSelectedProf(item);\r\n  };\r\n  const handleSearchQuery = ({ target }) => {\r\n    setSelectedProf(undefined);\r\n    setSearchQuery(target.value);\r\n  };\r\n\r\n  const handlePageChange = (pageIndex) => {\r\n    setCurrentPage(pageIndex);\r\n  };\r\n  const handleSort = () => {\r\n    if (sortBy.path === \"name\") {\r\n      setSortBy({\r\n        path: \"price\",\r\n        order: \"asc\"\r\n      });\r\n      return;\r\n    }\r\n    setSortBy({\r\n      ...sortBy,\r\n      order: sortBy.order === \"asc\" ? \"desc\" : \"asc\"\r\n    });\r\n  };\r\n\r\n  function filterProducts(data) {\r\n    return searchQuery\r\n      ? data.filter((product) => product.name.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1)\r\n      : selectedProf ? data.filter((product) => JSON.stringify(product.category) === JSON.stringify(selectedProf)) : data;\r\n  }\r\n\r\n  const filteredProducts = filterProducts(products).map(u => ({\r\n    ...u,\r\n    price: +u.price\r\n  }));\r\n  const count = filteredProducts.length;\r\n  const sortedProducts = _.orderBy(filteredProducts, [sortBy.path], [sortBy.order]);\r\n  const productsCrop = paginate(sortedProducts, currentPage, pageSize);\r\n  const clearFilter = () => {\r\n    setSelectedProf(undefined);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row g-0\">\r\n        <input\r\n            className=\"form-control w-100 mb-3\"\r\n            type=\"text\"\r\n            name=\"searchQuery\"\r\n            placeholder=\"Search...\"\r\n            onChange={handleSearchQuery}\r\n            value={searchQuery}\r\n        />\r\n        {categories && !categoriesLoading && (\r\n          <div className=\"col d-flex flex-column flex-shrink-0\" style={{\r\n            maxWidth: \"250px\",\r\n            marginRight: \"1rem\"\r\n          }}>\r\n            <GroupList\r\n                selectedItem={selectedProf}\r\n                items={categories}\r\n                onItemSelect={handleProfessionSelect}\r\n            />\r\n            <button\r\n                className=\"btn btn-secondary mt-2\"\r\n                onClick={clearFilter}\r\n            >\r\n              Очиститть\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className=\"col d-flex flex-column\">\r\n          {count > 0 && (\r\n            <>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <button className=\"btn btn-light mb-3\" onClick={handleSort}>\r\n                  Сортировать по стоимости\r\n                  {renderSortArrow(sortBy)}\r\n                </button>\r\n              </div>\r\n              <ProductList\r\n                  products={productsCrop}\r\n              />\r\n            </>\r\n          )}\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Pagination\r\n              itemsCount={count}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nProductsListPage.propTypes = {\r\n  products: PropTypes.array\r\n};\r\n\r\nexport default ProductsListPage;\r\n","import { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDataStatus, loadProductsList } from \"../../../store/products\";\r\n\r\nconst ProductsLoader = ({ children }) => {\r\n  const dataStatus = useSelector(getDataStatus());\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (!dataStatus) dispatch(loadProductsList());\r\n  }, []);\r\n  if (!dataStatus) return \"Loading\";\r\n  return children;\r\n};\r\n\r\nProductsLoader.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\n\r\nexport default ProductsLoader;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ProductPage from \"../components/page/productPage\";\r\nimport ProductsListPage from \"../components/page/productsListPage\";\r\nimport ProductsLoader from \"../components/ui/hoc/productsLoader\";\r\n\r\nconst Products = () => {\r\n  const params = useParams();\r\n  const {\r\n    productId\r\n  } = params;\r\n  return (\r\n    <>\r\n      <ProductsLoader>\r\n        {productId ? <ProductPage productId={productId}/> : <ProductsListPage/>}\r\n      </ProductsLoader>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","export function validator(data, config) {\r\n    const errors = {};\r\n    function validate(validateMethod, data, config) {\r\n        let statusValidate;\r\n        switch (validateMethod) {\r\n            case \"isRequired\": {\r\n                if (typeof data === \"boolean\") {\r\n                    statusValidate = !data;\r\n                } else {\r\n                    statusValidate = data.trim() === \"\";\r\n                }\r\n                break;\r\n            }\r\n            case \"isEmail\": {\r\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n                statusValidate = !emailRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"isUrl\": {\r\n                const urlRegExp = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi;\r\n                statusValidate = !urlRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"isCapitalSymbol\": {\r\n                const capitalRegExp = /[A-Z]+/g;\r\n                statusValidate = !capitalRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"isContainDigit\": {\r\n                const digitRegExp = /\\d+/g;\r\n                statusValidate = !digitRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"min\": {\r\n                statusValidate = data.length < config.value;\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        if (statusValidate) return config.message;\r\n    }\r\n    for (const fieldName in data) {\r\n        for (const validateMethod in config[fieldName]) {\r\n            const error = validate(\r\n                validateMethod,\r\n                data[fieldName],\r\n                config[fieldName][validateMethod]\r\n            );\r\n            if (error && !errors[fieldName]) {\r\n                errors[fieldName] = error;\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextField = ({ label, type, name, value, onChange, error }) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    const toggleShowPassword = () => {\r\n        setShowPassword((prevState) => !prevState);\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor={name}> {label}</label>\r\n            <div className=\"input-group has-validation\">\r\n                <input\r\n                    type={showPassword ? \"text\" : type}\r\n                    id={name}\r\n                    name={name}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    className={getInputClasses()}\r\n                />\r\n\r\n                {type === \"password\" && (\r\n                    <button\r\n                        className=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        onClick={toggleShowPassword}\r\n                    >\r\n                        <i\r\n                            className={\r\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\r\n                            }\r\n                        ></i>\r\n                    </button>\r\n                )}\r\n                {error && <div className=\"invalid-feedback \">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nTextField.defaultProps = {\r\n    type: \"text\"\r\n};\r\nTextField.propTypes = {\r\n    label: PropTypes.string,\r\n    type: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\r\n    const handleChange = () => {\r\n        onChange({ name: name, value: !value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    return (\r\n        <div className=\"form-check mb-4\">\r\n            <input\r\n                className={getInputClasses()}\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                id={name}\r\n                onChange={handleChange}\r\n                checked={value}\r\n            />\r\n            <label className=\"form-check-label \" htmlFor={name}>\r\n                {children}\r\n            </label>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\nCheckBoxField.propTypes = {\r\n    name: PropTypes.string,\r\n    value: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]),\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default CheckBoxField;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport TextField from \"../common/form/textField\";\r\nimport CheckBoxField from \"../common/form/checkBoxField\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAuthErrors, login } from \"../../store/users\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LoginForm = () => {\r\n  const history = useHistory();\r\n  const [data, setData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        stayOn: false\r\n    });\r\n    const loginError = useSelector(getAuthErrors());\r\n    const dispatch = useDispatch();\r\n    const [errors, setErrors] = useState({});\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            }\r\n        },\r\n        password: {\r\n            isRequired: {\r\n                message: \"Пароль обязателкн для заполнения\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        const redirect = history.location.state ? history.location.state.from.pathname : \"/\";\r\n        dispatch(login({\r\n          payload: data,\r\n          redirect\r\n        }));\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField\r\n                label=\"Электронная почта\"\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n            />\r\n            <TextField\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                error={errors.password}\r\n            />\r\n            <CheckBoxField\r\n                value={data.stayOn}\r\n                onChange={handleChange}\r\n                name=\"stayOn\"\r\n            >\r\n                Оставаться в системе\r\n            </CheckBoxField>\r\n            {loginError && <p className=\"text-danger\">{loginError}</p>}\r\n\r\n            <button\r\n                type=\"submit\"\r\n                disabled={!isValid}\r\n                className=\"btn btn-primary w-100 mx-auto\"\r\n            >\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport TextField from \"../common/form/textField\";\r\nimport CheckBoxField from \"../common/form/checkBoxField\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signUp } from \"../../store/users\";\r\n\r\nconst RegisterForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    licence: false\r\n  });\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен некорректно\"\r\n            }\r\n        },\r\n        name: {\r\n            isRequired: {\r\n                message: \"Имя обязательно для заполнения\"\r\n            },\r\n            min: {\r\n                message: \"Имя должено состаять миниму из 3 символов\",\r\n                value: 3\r\n            }\r\n        },\r\n        password: {\r\n            isRequired: {\r\n                message: \"Пароль обязательна для заполнения\"\r\n            },\r\n            isCapitalSymbol: {\r\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\r\n            },\r\n            isContainDigit: {\r\n                message: \"Пароль должен содержать хотя бы одно число\"\r\n            },\r\n            min: {\r\n                message: \"Пароль должен состаять миниму из 8 символов\",\r\n                value: 8\r\n            }\r\n        },\r\n        licence: {\r\n            isRequired: {\r\n                message:\r\n                    \"Вы не можете использовать наш сервис без подтреврждения лицензионного соглашения\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        const newData = {\r\n            ...data,\r\n          cart: []\r\n        };\r\n        dispatch(signUp(newData));\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField\r\n                label=\"Электронная почта\"\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n            />\r\n            <TextField\r\n                label=\"Имя\"\r\n                name=\"name\"\r\n                value={data.name}\r\n                onChange={handleChange}\r\n                error={errors.name}\r\n            />\r\n            <TextField\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                error={errors.password}\r\n            />\r\n            <CheckBoxField\r\n                value={data.licence}\r\n                onChange={handleChange}\r\n                name=\"licence\"\r\n                error={errors.licence}\r\n            >\r\n                Подтвердить <a>лицензионное соглашение</a>\r\n            </CheckBoxField>\r\n            <button\r\n                type=\"submit\"\r\n                disabled={!isValid}\r\n                className=\"btn btn-primary w-100 mx-auto\"\r\n            >\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport LoginForm from \"../components/ui/loginForm\";\r\nimport RegisterForm from \"../components/ui/registerForm\";\r\n\r\nconst Login = () => {\r\n  const { type } = useParams();\r\n  const [formType, setFormType] = useState(\r\n      type === \"register\" ? type : \"login\"\r\n  );\r\n  const toggleFormType = (params) => {\r\n    setFormType((prevState) =>\r\n        prevState === \"register\" ? \"login\" : \"register\"\r\n    );\r\n  };\r\n\r\n  return (\r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n            {formType === \"register\" ? (\r\n                <>\r\n                  <h3 className=\"mb-4\">Register</h3>\r\n                  <RegisterForm/>\r\n                  <p>\r\n                    Already have account?{\" \"}\r\n                    <a role=\"button\" onClick={toggleFormType}>\r\n                      {\" \"}\r\n                      Sign In\r\n                    </a>\r\n                  </p>\r\n                </>\r\n            ) : (\r\n                <>\r\n                  <h3 className=\"mb-4\">Login</h3>\r\n                  <LoginForm/>\r\n                  <p>\r\n                    Dont have account?{\" \"}\r\n                    <a role=\"button\" onClick={toggleFormType}>\r\n                      {\" \"}\r\n                      Sign Up\r\n                    </a>\r\n                  </p>\r\n                </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Main = () => {\r\n  return (\r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"d-flex flex-column align-items-center\">\r\n          <h1><span className=\"text-uppercase\">Online Store</span> - Главная страница</h1>\r\n          <Link className=\"btn btn-lg btn-primary my-3 fs-1\" to=\"/product\">В каталог</Link>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCurrentUserData } from \"../../store/users\";\r\n\r\nconst NavProfile = () => {\r\n  const currentUser = useSelector(getCurrentUserData());\r\n  const [isOpen, setOpen] = useState(false);\r\n  const toggleMenu = () => {\r\n    setOpen((prevState) => !prevState);\r\n  };\r\n  if (!currentUser) return \"Loading\";\r\n  return (\r\n      <>\r\n        <div className=\"dropdown col\" onClick={toggleMenu}>\r\n          <div className=\"btn link-light dropdown-toggle d-flex align-items-center\">\r\n            <div className=\"me-2\">{currentUser.name}</div>\r\n            <i className=\"bi bi-person-circle mx-2\"/>\r\n          </div>\r\n          <div className={\"w-100 dropdown-menu\" + (isOpen ? \" show\" : \"\")}>\r\n            <Link to=\"/logout\" className=\"dropdown-item\">\r\n              Выйти\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <Link to=\"/cart\" className=\"btn btn-outline-success\">\r\n          <i className=\"bi bi-cart\"/>\r\n        </Link>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default NavProfile;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport NavProfile from \"./navProfile\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsLoggedIn } from \"../../store/users\";\r\nconst NavBar = () => {\r\n    const isLoggedIn = useSelector(getIsLoggedIn());\r\n    return (\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark mb-3\">\r\n            <div className=\"container-fluid\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link \" activeClassName=\"active\" aria-current=\"page\" exact to=\"/\">\r\n                            Главная\r\n                        </NavLink>\r\n                    </li>\r\n                    {isLoggedIn && (\r\n                        <>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                activeClassName=\"active\"\r\n                                className=\"nav-link \"\r\n                                aria-current=\"page\"\r\n                                to=\"/product\"\r\n                            >\r\n                                Каталог\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                activeClassName=\"active\"\r\n                                className=\"nav-link \"\r\n                                aria-current=\"page\"\r\n                                to=\"/add\"\r\n                            >\r\n                                Редактировать\r\n                            </NavLink>\r\n                        </li>\r\n                        </>\r\n                    )}\r\n                </ul>\r\n                <div className=\"d-flex align-items-center\">\r\n                    {isLoggedIn ? (\r\n                        <NavProfile />\r\n                    ) : (\r\n                        <Link\r\n                            className=\"nav-link \"\r\n                            aria-current=\"page\"\r\n                            to=\"/login\"\r\n                        >\r\n                            Войти\r\n                        </Link>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsLoggedIn } from \"../../store/users\";\r\n\r\nconst ProtectedRoute = ({\r\n  component: Component,\r\n  children,\r\n  ...rest\r\n}) => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn());\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!isLoggedIn) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                  from: props.location\r\n                }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n        return Component ? <Component {...props} /> : children;\r\n      }}\r\n    />\r\n  );\r\n};\r\nProtectedRoute.propTypes = {\r\n  component: PropTypes.func,\r\n  location: PropTypes.object,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logOut } from \"../store/users\";\r\nconst LogOut = () => {\r\n  const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(logOut());\r\n    }, []);\r\n    return <h1>Loading</h1>;\r\n};\r\n\r\nexport default LogOut;\r\n","import { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getIsLoggedIn, getUsersLoadingStatus, loadUsersList } from \"../../../store/users\";\r\nimport { loadProductsList } from \"../../../store/products\";\r\nimport { loadCategoriesList } from \"../../../store/categories\";\r\n\r\nconst AppLoader = ({ children }) => {\r\n  const dispatch = useDispatch();\r\n  const isLoggedIn = useSelector(getIsLoggedIn());\r\n  const usersStatusLoading = useSelector(getUsersLoadingStatus());\r\n  useEffect(() => {\r\n    dispatch(loadCategoriesList());\r\n    if (isLoggedIn) {\r\n      dispatch(loadUsersList());\r\n      dispatch(loadProductsList());\r\n    }\r\n  }, [isLoggedIn]);\r\n  if (usersStatusLoading) return \"Loading\";\r\n  return children;\r\n};\r\n\r\nAppLoader.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n};\r\n\r\nexport default AppLoader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SelectField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    defaultOption,\r\n    options,\r\n    error,\r\n    name\r\n}) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n\r\n    const optionsArray =\r\n        !Array.isArray(options) && typeof options === \"object\"\r\n            ? Object.keys(options).map((optionName) => ({\r\n                  name: options[optionName].name,\r\n                  value: options[optionName]._id\r\n              }))\r\n            : options;\r\n\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor=\"validationCustom04\" className=\"form-label\">\r\n                {label}\r\n            </label>\r\n            <select\r\n                className={getInputClasses()}\r\n                id=\"validationCustom04\"\r\n                name={name}\r\n                value={value}\r\n                onChange={handleChange}\r\n            >\r\n                <option disabled value=\"\">\r\n                    {defaultOption}\r\n                </option>\r\n                {optionsArray &&\r\n                    optionsArray.map((option) => (\r\n                        <option value={option.value} key={option.value}>\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n            </select>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\nSelectField.propTypes = {\r\n    defaultOption: PropTypes.string,\r\n    label: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string,\r\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default SelectField;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport TextField from \"../common/form/textField\";\r\nimport SelectField from \"../common/form/selectField\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCategories } from \"../../store/categories\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { createProduct, getProducts, updateProduct } from \"../../store/products\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddForm = ({ productId, edit, onCancel }) => {\r\n  const dispatch = useDispatch();\r\n  const products = useSelector(getProducts());\r\n  const initialState = {\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    category: \"\",\r\n    quantity: \"\",\r\n    photo: \"\"\r\n  };\r\n  const [data, setData] = useState(initialState);\r\n  useEffect(() => {\r\n    const product = products.find(p => p._id === productId);\r\n    if (product) {\r\n      setData({\r\n        ...product\r\n      });\r\n    }\r\n  }, [productId]);\r\n\r\n  const categories = useSelector(getCategories());\r\n  const categoriesList = categories.map((p) => ({\r\n    label: p.name,\r\n    value: p._id\r\n  }));\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleCancel = () => {\r\n    onCancel();\r\n    setData(initialState);\r\n  };\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      [target.name]: target.value\r\n    }));\r\n  };\r\n  const validatorConfig = {\r\n    name: {\r\n      isRequired: {\r\n        message: \"Название обязательно для заполнения\"\r\n      },\r\n      min: {\r\n        message: \"Название должено состаять миниму из 3 символов\",\r\n        value: 3\r\n      }\r\n    },\r\n    description: {\r\n      isRequired: {\r\n        message: \"Описание обязательно для заполнения\"\r\n      },\r\n      min: {\r\n        message: \"Описание должено состаять миниму из 3 символов\",\r\n        value: 3\r\n      }\r\n    },\r\n    price: {\r\n      isRequired: {\r\n        message: \"Стоимость обязательна для заполнения\"\r\n      }\r\n    },\r\n    quantity: {\r\n      isRequired: {\r\n        message: \"Количество обязательн для заполнения\"\r\n      }\r\n    },\r\n    category: {\r\n      isRequired: {\r\n        message: \"Обязательно выберите категорию\"\r\n      }\r\n    },\r\n    photo: {\r\n      isRequired: {\r\n        message:\r\n            \"Ссылка на фото обязательна\"\r\n      },\r\n      isUrl: {\r\n        message: \"Данная ссылка содержит ошибку\"\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    validate();\r\n  }, [data]);\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig);\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = validate();\r\n    if (!isValid) return;\r\n    if (edit) {\r\n      dispatch(updateProduct(data));\r\n      onCancel();\r\n    } else {\r\n      const newData = {\r\n        ...data,\r\n        _id: nanoid()\r\n      };\r\n      dispatch(createProduct(newData));\r\n     }\r\n    setData(initialState);\r\n  };\r\n\r\n  return (\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n            label=\"Наименование\"\r\n            name=\"name\"\r\n            value={data.name}\r\n            onChange={handleChange}\r\n            error={errors.name}\r\n        />\r\n        <TextField\r\n            label=\"Описание\"\r\n            name=\"description\"\r\n            value={data.description}\r\n            onChange={handleChange}\r\n            error={errors.description}\r\n        />\r\n        <TextField\r\n            label=\"Стоимость\"\r\n            type=\"number\"\r\n            name=\"price\"\r\n            value={data.price}\r\n            onChange={handleChange}\r\n            error={errors.price}\r\n        />\r\n        <SelectField\r\n            label=\"Категория\"\r\n            defaultOption=\"Choose...\"\r\n            name=\"category\"\r\n            options={categoriesList}\r\n            onChange={handleChange}\r\n            value={data.category}\r\n            error={errors.category}\r\n        />\r\n        <TextField\r\n            label=\"Количество\"\r\n            type=\"number\"\r\n            name=\"quantity\"\r\n            value={data.quantity}\r\n            onChange={handleChange}\r\n            error={errors.quantity}\r\n        />\r\n        <TextField\r\n            label=\"Фото\"\r\n            type=\"text\"\r\n            name=\"photo\"\r\n            value={data.photo}\r\n            onChange={handleChange}\r\n            error={errors.photo}\r\n        />\r\n        <button\r\n            type=\"submit\"\r\n            disabled={!isValid}\r\n            className=\"btn btn-primary w-100 mx-auto\"\r\n        >\r\n          {edit ? \"Сохранить\" : \"Добавить\"}\r\n        </button>\r\n        {edit && <button className=\"btn btn-danger w-100 mx-auto my-2\" type=\"button\" onClick={handleCancel}>Отмена</button>}\r\n      </form>\r\n  );\r\n};\r\n\r\nAddForm.propTypes = {\r\n  productId: PropTypes.string,\r\n  edit: PropTypes.bool,\r\n  onCancel: PropTypes.func\r\n};\r\n\r\nexport default AddForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { paginate } from \"../../utils/paginate\";\r\nimport Pagination from \"../common/pagination\";\r\nimport _ from \"lodash\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProducts, removeProduct } from \"../../store/products\";\r\nimport { getCategories, getCategoriesLoadingStatus } from \"../../store/categories\";\r\nimport AddForm from \"./addForm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Category from \"./category\";\r\nimport ProductsLoader from \"./hoc/productsLoader\";\r\nimport { formatPrice } from \"../../utils/formatPrice\";\r\n\r\nconst AddProductTable = () => {\r\n  const products = useSelector(getProducts());\r\n  const dispatch = useDispatch();\r\n  const [product, setProduct] = useState(\"\");\r\n  const [editMode, setEditMode] = useState(false);\r\n  const categories = useSelector(getCategories());\r\n  const categoriesLoading = useSelector(getCategoriesLoadingStatus());\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selectedProf, setSelectedProf] = useState();\r\n  const pageSize = 8;\r\n\r\n  const handleDelete = (productId) => {\r\n    dispatch(removeProduct(productId));\r\n    setEditMode(false);\r\n  };\r\n\r\n  const handleEdit = (prod) => {\r\n    setProduct(prod);\r\n    setEditMode(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedProf, searchQuery]);\r\n\r\n  const handleSearchQuery = ({ target }) => {\r\n    setSelectedProf(undefined);\r\n    setSearchQuery(target.value);\r\n  };\r\n\r\n  const handlePageChange = (pageIndex) => {\r\n    setCurrentPage(pageIndex);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditMode(false);\r\n  };\r\n\r\n  const renderContent = (item, column) => {\r\n    if (columns[column].component) {\r\n      const component = columns[column].component;\r\n      if (typeof component === \"function\") {\r\n        return component(item);\r\n      }\r\n      return component;\r\n    }\r\n    return _.get(item, columns[column].path);\r\n  };\r\n\r\n  function filterProducts(data) {\r\n    return searchQuery\r\n        ? data.filter((product) => product.name.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1)\r\n        : data;\r\n  }\r\n\r\n  const columns = {\r\n    name: {\r\n      path: \"name\",\r\n      name: \"Наименование\",\r\n      component: (product) => (\r\n          <Link className=\"small\" to={`/product/${product._id}`}>{product.name}</Link>\r\n      )\r\n    },\r\n    description: {\r\n      name: \"Описание\",\r\n      component: (product) => <p className=\"small\" style={{\r\n        overflow: \"hidden\",\r\n        display: \"-webkit-box\",\r\n        WebkitLineClamp: \"3\",\r\n        WebkitBoxOrient: \"vertical\"\r\n      }}>{product.description}</p>\r\n    },\r\n    price: {\r\n      name: \"Цена\",\r\n      component: (product) => <p className=\"small text-nowrap\">{formatPrice(+product.price)}</p>\r\n    },\r\n    category: {\r\n      name: \"Категория\",\r\n      component: (product) => <Category id={product.category}/>\r\n    },\r\n    quantity: {\r\n      name: \"Количество\",\r\n      component: (product) => <p className=\"small text-center\">{product.quantity}</p>\r\n    },\r\n    photo: {\r\n      name: \"Фото\",\r\n      component: (product) => (\r\n          <div style={{ width: \"100px\" }}>\r\n            <img src={product.photo} alt=\"photo\" className=\"img-fluid\"/>\r\n          </div>\r\n      )\r\n    },\r\n    actions: {\r\n      path: \"photo\",\r\n      name: \"Действия\",\r\n      component: (product) => (\r\n          <div className=\"d-flex align-items-center justify-content-end\">\r\n            <i style={{ color: \"blue\" }} role=\"button\" className=\"bi bi-pencil-fill mx-2\"\r\n               onClick={() => handleEdit(product._id)}/>\r\n            <i style={{ color: \"red\" }} role=\"button\" className=\"bi bi-x-circle-fill\"\r\n               onClick={() => handleDelete(product._id)}/>\r\n          </div>\r\n      )\r\n    }\r\n  };\r\n  const filteredUsers = filterProducts(products);\r\n  const count = filteredUsers ? filteredUsers.length : 0;\r\n  const usersCrop = paginate(filteredUsers, currentPage, pageSize);\r\n\r\n  return (\r\n    <>\r\n      <ProductsLoader>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row g-0\">\r\n            {categories && !categoriesLoading && (\r\n                <div className=\"col d-flex flex-column flex-shrink-0 p-3\" style={{\r\n                  maxWidth: \"300px\",\r\n                  marginRight: \"1rem\"\r\n                }}>\r\n                  <AddForm productId={product} edit={editMode} onCancel={handleCancel}/>\r\n                </div>\r\n            )}\r\n            <div className=\"col d-flex flex-column\">\r\n              <input\r\n                  className=\"form-control w-100 mb-3\"\r\n                  type=\"text\"\r\n                  name=\"searchQuery\"\r\n                  placeholder=\"Search...\"\r\n                  onChange={handleSearchQuery}\r\n                  value={searchQuery}\r\n              />\r\n              {count > 0 && (\r\n                  <table className=\"table\">\r\n                    <thead>\r\n                    <tr>\r\n                      {Object.keys(columns).map((column) => (\r\n                          <th\r\n                              key={column}\r\n                              {...{ role: columns[column].path && \"button\" }}\r\n                              scope=\"col\"\r\n                          >\r\n                            {columns[column].name}{\" \"}\r\n                          </th>\r\n                      ))}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {usersCrop.map((item) => (\r\n                        <tr key={item._id}>\r\n                          {Object.keys(columns).map((column) => (\r\n                              <td key={column}>{renderContent(item, column)}</td>\r\n                          ))}\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                  </table>\r\n              )}\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                    itemsCount={count}\r\n                    pageSize={pageSize}\r\n                    currentPage={currentPage}\r\n                    onPageChange={handlePageChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ProductsLoader>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddProductTable;\r\n","import React from \"react\";\r\nimport ProductsLoader from \"../components/ui/hoc/productsLoader\";\r\nimport AddProductTable from \"../components/ui/addProductTable\";\r\n\r\nconst Add = () => {\r\n  return (\r\n      <>\r\n        <ProductsLoader>\r\n          <AddProductTable />\r\n        </ProductsLoader>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default Add;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport Pagination from \"../components/common/pagination\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProducts } from \"../store/products\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProductsLoader from \"../components/ui/hoc/productsLoader\";\r\nimport { getCurrentUserData, updateUser } from \"../store/users\";\r\nimport { formatPrice } from \"../utils/formatPrice\";\r\n\r\nconst Cart = () => {\r\n  const products = useSelector(getProducts());\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector(getCurrentUserData());\r\n  const cart = currentUser.cart;\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selectedProf, setSelectedProf] = useState();\r\n  const pageSize = 8;\r\n\r\n  const handleDelete = (productId) => {\r\n    dispatch(updateUser({\r\n      ...currentUser,\r\n      cart: cart.filter((item) => item !== productId)\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [selectedProf, searchQuery]);\r\n\r\n  const handleSearchQuery = ({ target }) => {\r\n    setSelectedProf(undefined);\r\n    setSearchQuery(target.value);\r\n  };\r\n\r\n  const handlePageChange = (pageIndex) => {\r\n    setCurrentPage(pageIndex);\r\n  };\r\n\r\n  if (!products || !cart) {\r\n    return \"Loading...\";\r\n  }\r\n  function filterProducts(data) {\r\n    return searchQuery\r\n        ? data.filter((product) => product.name.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1)\r\n        : data;\r\n  }\r\n  const cartProducts = cart.map((item) => products.find(p => p._id === item));\r\n  const total = cartProducts.reduce((acc, item) => acc + (+item.price), 0);\r\n  const filteredUsers = filterProducts(cartProducts);\r\n  const count = filteredUsers ? filteredUsers.length : 0;\r\n  const usersCrop = paginate(filteredUsers, currentPage, pageSize);\r\n\r\n  return (\r\n      <>\r\n        <ProductsLoader>\r\n          <div className=\"container-fluid\">\r\n          <input\r\n              className=\"form-control w-100 mb-3\"\r\n              type=\"text\"\r\n              name=\"searchQuery\"\r\n              placeholder=\"Search...\"\r\n              onChange={handleSearchQuery}\r\n              value={searchQuery}\r\n          />\r\n          <h1 className=\"card-title mb-3\">Корзина</h1>\r\n          <div className=\"row g-0\">\r\n            <div className=\"d-flex flex-column col\">\r\n              {count > 0 && (\r\n                  <div>\r\n                    {usersCrop.map((item) => (\r\n                        <div key={item._id} className=\"card mb-3\">\r\n                          <button\r\n                              className=\"position-absolute top-0 end-0 btn btn-light btn-sm link-danger fs-4\"\r\n                              onClick={() => handleDelete(item._id)}\r\n                          >\r\n                            <i className=\"bi bi-x-circle-fill\"/>\r\n                          </button>\r\n                          <div className=\"row g-0\">\r\n                            <div className=\"col-md-4 d-flex align-items-center justify-content-center\">\r\n                              <img src={item.photo} className=\"img-fluid rounded-start\" alt=\"img\" width=\"140\"\r\n                                   height=\"140\"/>\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                              <div className=\"card-body row g-0\">\r\n                                <div className=\"col\">\r\n                                  <h5 className=\"card-title\">Название</h5>\r\n                                  <Link to={`/product/${item._id}`} className=\"text-center\">{item.name}</Link>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                  <h5 className=\"card-title text-center\">Количество</h5>\r\n                                  <p className=\"text-center\">1</p>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                  <h5 className=\"card-title text-center\">Стоимость</h5>\r\n                                  <p className=\"text-center\">{formatPrice(+item.price)}</p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                    ))}\r\n                  </div>\r\n              )}\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Pagination\r\n                    itemsCount={count}\r\n                    pageSize={pageSize}\r\n                    currentPage={currentPage}\r\n                    onPageChange={handlePageChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-2 card mb-3\" style={{ marginLeft: \"1rem\" }}>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title text-center\">Итого</h5>\r\n                <p className=\"card-text text-center\">{formatPrice(total)}</p>\r\n                <button type=\"button\" className=\"btn btn-primary w-100\">Оформить заказ</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </ProductsLoader>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Products from \"./layouts/products\";\r\nimport Login from \"./layouts/login\";\r\nimport Main from \"./layouts/main\";\r\nimport NavBar from \"./components/ui/navBar\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport ProtectedRoute from \"./components/common/protectedRoute\";\r\nimport LogOut from \"./layouts/logOut\";\r\nimport AppLoader from \"./components/ui/hoc/appLoader\";\r\nimport Add from \"./layouts/add\";\r\nimport Cart from \"./layouts/cart\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <AppLoader>\r\n        <NavBar/>\r\n        <Switch>\r\n          <Route\r\n            path=\"/product/:productId?\"\r\n            component={Products}\r\n          />\r\n          <ProtectedRoute path=\"/add\" component={Add}/>\r\n          <ProtectedRoute path=\"/cart\" component={Cart}/>\r\n          <Route path=\"/login/:type?\" component={Login}/>\r\n          <Route path=\"/logout\" component={LogOut}/>\r\n          <Route path=\"/\" exact component={Main}/>\r\n          <Redirect to=\"/\"/>\r\n        </Switch>\r\n        <ToastContainer/>\r\n      </AppLoader>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import usersReducer from \"./users\";\r\nimport productsReducer from \"./products\";\r\nimport categoriesReducer from \"./categories\";\r\n\r\nconst { combineReducers, configureStore } = require(\"@reduxjs/toolkit\");\r\n\r\nconst rootReducer = combineReducers({\r\n  users: usersReducer,\r\n  products: productsReducer,\r\n  categories: categoriesReducer\r\n});\r\n\r\nexport function createStore() {\r\n    return configureStore({\r\n        reducer: rootReducer\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./app/App\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { createStore } from \"./app/store/createStore\";\r\nimport { Provider } from \"react-redux\";\r\nimport history from \"./app/utils/history\";\r\n\r\nconst store = createStore();\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <Router history={history}>\r\n                <App />\r\n            </Router>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}